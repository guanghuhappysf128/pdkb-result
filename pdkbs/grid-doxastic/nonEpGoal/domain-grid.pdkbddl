
    (:types pos survivor)
    (:constants)
    (:predicates
       {AK}(at ?ag - agent ?p - pos)
       {AK}(succ ?p1 - pos ?p2 - pos)
           (survivorat ?s - survivor ?p - pos)
           (hiddensurvivorat ?s - survivor ?p - pos)
           (checked ?p - pos)
           ;(obs ?s - survivor ?p - pos)   -- to force planner to communicate (communicating all baseline)
       
    ) 
           
    
   (:action move
        :derive-condition   always
        :parameters         (?ag - agent ?p1 - pos ?p2 - pos)
        :precondition       (and (at ?ag ?p1) (succ ?p1 ?p2))
        :effect             (and (at ?ag ?p2) (!at ?ag ?p1))
    )
    


    
    (:action observ
       :derive-condition   always
       :parameters         (?ag - agent ?p - pos ?s - survivor)
       :precondition       (and(at ?ag ?p) (not(checked ?p))) 
       :effect             (and(when (hiddensurvivorat ?s ?p) [?ag](survivorat ?s ?p)) 
                               (when (!hiddensurvivorat ?s ?p) [?ag](!survivorat ?s ?p))
                               (checked ?p))
                                
    )


    (:action comm
      :derive-condition   always
      :parameters         (?p - pos ?a - agent  ?s - survivor)
      :precondition       (and (at ?a ?p) [?a](survivorat ?s ?p)) 
      :effect             (and ;(obs ?s ?p) 
                               (forall ?g - agent 
                                   [?g](survivorat ?s ?p)))
    )

    (:action badcomm
      :derive-condition   always
      :parameters         (?p - pos ?a - agent  ?s - survivor)
      :precondition       (and (at ?a ?p) [?a](survivorat ?s ?p)) 
      :effect             (and
                               (forall ?g - agent 
                                   (when (!at ?g ?p) [?g](survivorat ?s ?p))))
    )
)


