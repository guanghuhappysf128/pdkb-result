
(define (domain negation-removal)
    (:agents a)
    (:types )
    (:constants )
    (:predicates (p) (q))

    (:action apply
        :derive-condition   always
        :precondition       (and )
        :effect             (and [a](p))
    )

    (:action check
        :derive-condition   always
        :precondition       (and (not <a>(!p)))
        :effect             (q)
    )
)


(define (problem prob)

    (:domain negation-removal)

    (:projection )
    (:depth 2)
    (:task valid_generation)

    (:init-type complete)
    (:init
        <a>(p)
        <a>(!p)
    )

    (:goal (q))

)
